version: "3.9"

services:
  web-server:
    image: nginx:1.25.3-alpine
    hostname: web-server
    container_name: web-server
    ports:
      - "8080:80"
    volumes:
      - ./web:/usr/share/nginx/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      api-server:
        condition: service_healthy
    networks:
      my-network:
        ipv4_address: 172.19.1.10

  api-server:
    build:
      context: ./api
    hostname: api-server
    container_name: api-server
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=testdb
    depends_on:
      db:
        condition: service_healthy
    networks:
      my-network:
        ipv4_address: 172.19.1.20
    healthcheck:
      test: curl --fail -s http://localhost:8000/version || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  db:
    image: mysql:8.0.33
    hostname: db
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: testdb
    ports:
      - "3306:3306"
    networks:
      my-network:
        ipv4_address: 172.19.1.30
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pexample"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.1
    hostname: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: example
    depends_on:
      db:
        condition: service_healthy
    networks:
      my-network:
        ipv4_address: 172.19.1.40

networks:
  my-network:
    name: my-network
    ipam:
      config:
        - subnet: 172.19.1.0/24
